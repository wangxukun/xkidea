name: Deploy wx-server to Alibaba Cloud ECS

# 当代码推送到 main 分支时触发工作流
on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: Deploy to ECS
    runs-on: ubuntu-latest

    steps:
      # 1. 检出代码
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. 设置 Node.js 环境
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20' # 确保使用适合项目的 Node.js 版本

      # 3. 安装 Nx 工具
      - name: Install Nx
        run: npm install -g nx

      # 4. 安装依赖
      - name: Install dependencies
        run: npm ci # 专为CI环境设计，主要依据 package-lock.json 文件来安装依赖项，而不是 package.json。
        env:
          CI: true # 设置CI环境标志

      # 5.1 构建代码（如果需要构建）
      - name: Build the project
        run: nx run wx-server:build

      # 5.2 复制安全域名MP_verify到构建好的代码目录下
      - name: copy the MP_verify
        run: nx run wx-server:copy-public

      # 6. 压缩项目文件以便传输到服务器
      - name: Compress project files
        run: zip -r wx-server.zip dist/packages/wx-server/*

      # 7. 通过 SSH 将项目文件上传到阿里云 ECS 服务器
      - name: Upload project to ECS
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.WXKZD_ECS_HOST}} # 阿里云 ECS 服务器的 IP 地址
          username: ${{ secrets.WXKZD_SSH_USERNAME }} # SSH 登录用户名
          key: ${{ secrets.WXKZD_SSH_PRIVATE_KEY }} # 私钥，用于 SSH 登录
          port: 22
          source: 'wx-server.zip'
          target: '/root' # 目标目录

      # 8. 通过 SSH 登录到 ECS 服务器解压文件
      - name: SSH and deploy
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.WXKZD_ECS_HOST }}
          username: ${{ secrets.WXKZD_SSH_USERNAME }}
          key: ${{ secrets.WXKZD_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            # 清除旧代码
            rm -rf /root/wx-server/*
            cd /root
            unzip wx-server.zip -d wx-server
            mv wx-server/dist/packages/wx-server/* wx-server/
            rm -rf wx-server/dist
            rm wx-server.zip

      # 9. 通过 SSH 登录到 ECS 服务器设置环境变量
      - name: SSH and deploy
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.WXKZD_ECS_HOST }}
          username: ${{ secrets.WXKZD_SSH_USERNAME }}
          key: ${{ secrets.WXKZD_SSH_PRIVATE_KEY }}
          port: 22
          script: |

      #sudo sh -c 'rm -f /etc/profile.d/eps-gzh.sh && printf "export EPS_GZH_APP_HOST=${{ secrets.EPS_GZH_APP_HOST }}\nexport EPS_GZH_APP_ID=${{ secrets.EPS_GZH_APP_ID }}\nexport EPS_GZH_APP_SECRET=${{ secrets.EPS_GZH_APP_SECRET }}\nexport EPS_GZH_APP_DB_USER=${{ secrets.EPS_GZH_APP_DB_USER }}\nexport EPS_GZH_APP_DB_PSW=${{ secrets.EPS_GZH_APP_DB_PSW }}\nexport EPS_GZH_APP_DB_IP=${{ secrets.EPS_GZH_APP_DB_IP }}\nexport EPS_GZH_APP_DB_PORT=${{ secrets.EPS_GZH_APP_DB_PORT }}\nexport EPS_GZH_APP_DB_NAME=${{ secrets.EPS_GZH_APP_DB_NAME }}\n" > /etc/profile.d/eps-gzh.sh'
      # 10. 安装依赖和启动服务器
      - name: Install dependencies on ECS
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.WXKZD_ECS_HOST }}
          username: ${{ secrets.WXKZD_SSH_USERNAME }}
          key: ${{ secrets.WXKZD_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            # 安装依赖
            cd /root/wx-server
            npm install
            # 启动或重启应用
            pm2 startOrReload ../conf/ecosystem.config.js

      # 处理异常和错误的工作流步骤
      - name: Handle errors
        if: failure()
        run: echo "Deployment failed. Check logs and try again."
